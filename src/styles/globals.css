@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
    font-family: 'Quittance';
    src: url('/fonts/Quittance.otf') format('o'),
         url('/fonts/Quittance.otf') format('o');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Quittance';
    src: url('/fonts/Quittance.otf') format('opentype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Rany';
    src: url('/fonts/Rany.otf') format('opentype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Rany';
    src: url('/fonts/Rany-Medium.otf') format('opentype');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Rany';
    src: url('/fonts/Rany-Bold.otf') format('opentype');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }
  
  @layer base {
    body {
      @apply font-rany;
    }
    h1, h2, h3, h4, h5, h6 {
      @apply font-quittance;
    }
    button {
      @apply font-rany;
    }
  :root {
        --background: 120 61% 50%; /* Lime green background */
        --foreground: 0 0% 0%; /* White text */
        
        --card: 120 61% 50%;
        --card-foreground: 0 0% 100%;
        
        --popover: 120 61% 50%;
        --popover-foreground: 0 0% 100%;
        
        --primary: 0 0% 100%; /* White for primary elements */
        --primary-foreground: 120 61% 50%; /* Lime green text on primary elements */
        
        --secondary: 120 61% 45%; /* Slightly darker lime for secondary elements */
        --secondary-foreground: 0 0% 100%;
        
        --muted: 120 61% 40%;
        --muted-foreground: 0 0% 100%;
        
        --accent: 0 0% 100%; /* White accents */
        --accent-foreground: 120 61% 50%;
        
        --destructive: 0 84.2% 60.2%; /* Keep destructive as is */
        --destructive-foreground: 0 0% 98%;
        
        --border: 0 0% 100%; /* White borders */
        --input: 0 0% 100%;
        --ring: 0 0% 100%;
        --chart-1: 12 76% 61%;
        --chart-2: 173 58% 39%;
        --chart-3: 197 37% 24%;
        --chart-4: 43 74% 66%;
        --chart-5: 27 87% 67%;
        --radius: 0.5rem;
    }
  .dark {
        --background: 120 61% 20%; /* Darker lime green for dark mode */
        --foreground: 0 0% 100%;
        
        --card: 120 61% 20%;
        --card-foreground: 0 0% 100%;
        
        --popover: 120 61% 20%;
        --popover-foreground: 0 0% 100%;
        
        --primary: 0 0% 100%;
        --primary-foreground: 120 61% 50%;
        
        --secondary: 120 61% 45%;
        --secondary-foreground: 0 0% 100%;
        
        --muted: 120 61% 40%;
        --muted-foreground: 0 0% 100%;
        
        --accent: 0 0% 100%;
        --accent-foreground: 120 61% 50%;
        
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 0 0% 98%;
        
        --border: 0 0% 100%;
        --input: 0 0% 100%;
        --ring: 0 0% 100%;
        --chart-1: 220 70% 50%;
        --chart-2: 160 60% 45%;
        --chart-3: 30 80% 55%;
        --chart-4: 280 65% 60%;
        --chart-5: 340 75% 55%;
    }
  }
  
  @layer base {
  * {
    @apply border-border;
    }
  body {
    @apply bg-background text-foreground;
    }
}

h1 {
}

/* Add this CSS to your global stylesheet or a CSS module */
.hover-animation {
  animation: hoverEffect 3s infinite alternate;
}

@keyframes hoverEffect {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-10px);
  }
}

@keyframes float {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(20px);
  }
  100% {
    transform: translateX(0);
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

@keyframes swim {
  0% {
    transform: translateX(-50px) scaleX(-1);
  }
  25% {
    transform: translateX(0px) scaleX(-1); /* Duck pauses a bit */
  }
  50% {
    transform: translateX(calc(100vw + 50px)) scaleX(1);
  }
  75% {
    transform: translateX(calc(100vw + 50px)) scaleX(-1); /* Flip horizontally */
  }
  100% {
    transform: translateX(-50px) scaleX(1);
  }
}

.animate-swim {
  animation: swim 5s linear infinite;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10; /* Ensure it is above other elements */
}

.bg-radial-gradient {
  background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgb(10, 216, 54) 100%);
}

.navbar-transparent {
  background-color: transparent;
}

.crop-video {
  object-fit: cover; /* Ensures the video covers the container */
  object-position: center; /* Centers the video within the container */
  width: 100%; /* Ensures the video takes the full width of the container */
  height: 100%; /* Ensures the video takes the full height of the container */
}

/* Example of more specific cropping */
.crop-video-top-left {
  object-position: top left; /* Crops the video to show the top-left corner */
}

.crop-video-bottom-right {
  object-position: bottom right; /* Crops the video to show the bottom-right corner */
}

.crop-video-custom {
  object-position: 100% 75%; /* Crops the video to show a custom position */
}